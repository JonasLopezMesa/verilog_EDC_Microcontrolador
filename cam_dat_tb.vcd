$date
	Mon Dec 10 18:35:31 2012
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module microc_tb $end
$var wire 6 ! test_opcode [5:0] $end
$var wire 1 " test_z $end
$var reg 1 # test_clk $end
$var reg 3 $ test_op [2:0] $end
$var reg 1 % test_reset $end
$var reg 1 & test_s_inc $end
$var reg 1 ' test_s_inm $end
$var reg 1 ( test_we3 $end
$scope module microc1 $end
$var wire 8 ) alu_o [7:0] $end
$var wire 1 * clk $end
$var wire 16 + datos [15:0] $end
$var wire 10 , mux1_o [9:0] $end
$var wire 8 - mux2_o [7:0] $end
$var wire 3 . op [2:0] $end
$var wire 6 / opcode [5:0] $end
$var wire 10 0 pc_o [9:0] $end
$var wire 8 1 r1_o [7:0] $end
$var wire 8 2 r2_o [7:0] $end
$var wire 1 3 reset $end
$var wire 1 4 s_inc $end
$var wire 1 5 s_inm $end
$var wire 10 6 sum_o [9:0] $end
$var wire 1 7 we3 $end
$var wire 1 " z $end
$scope module multiplexor1 $end
$var wire 10 8 d0 [9:0] $end
$var wire 10 9 d1 [9:0] $end
$var wire 1 4 s $end
$var wire 10 : y [9:0] $end
$upscope $end
$scope module sumador $end
$var wire 10 ; a [9:0] $end
$var wire 10 < b [9:0] $end
$var wire 10 = y [9:0] $end
$upscope $end
$scope module PC $end
$var wire 1 * clk $end
$var wire 10 > d [9:0] $end
$var wire 1 3 reset $end
$var reg 10 ? q [9:0] $end
$upscope $end
$scope module memoria_programa $end
$var wire 10 @ a [9:0] $end
$var wire 1 * clk $end
$var wire 16 A rd [15:0] $end
$upscope $end
$scope module banco_reg $end
$var wire 1 * clk $end
$var wire 4 B ra1 [3:0] $end
$var wire 4 C ra2 [3:0] $end
$var wire 8 D rd1 [7:0] $end
$var wire 8 E rd2 [7:0] $end
$var wire 4 F wa3 [3:0] $end
$var wire 8 G wd3 [7:0] $end
$var wire 1 7 we3 $end
$upscope $end
$scope module multiplexor2 $end
$var wire 8 H d0 [7:0] $end
$var wire 8 I d1 [7:0] $end
$var wire 1 5 s $end
$var wire 8 J y [7:0] $end
$upscope $end
$scope module alu1 $end
$var wire 8 K a [7:0] $end
$var wire 8 L b [7:0] $end
$var wire 3 M op [2:0] $end
$var wire 8 N y [7:0] $end
$var wire 1 " zero $end
$var reg 8 O s [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
b1 ;
bx :
bx 9
bx 8
x7
bx 6
x5
x4
03
bx 2
bx 1
bx 0
bz /
bx .
bx -
bx ,
bx +
1*
bx )
x(
x'
x&
0%
bx $
1#
x"
bz !
$end
#2000
1'
15
b0 $
b0 .
b0 M
1(
17
1&
14
0#
0*
#6000
0&
04
#8000
1#
1*
#10000
0#
0*
0'
05
1&
14
b1 $
b1 .
b1 M
#14000
